buildscript {
	dependencies {
		// classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
		classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.14'
		classpath 'org.asciidoctor:asciidoctorj-diagram:1.5.4'
	}
}

plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
	details 'tree'
	filters {
		includeClassNamePattern '.+(Tests|Demo)$'
		tags {
			exclude 'exclude'
		}
	}
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

/*
test {
	scanForTestClasses = false
	include(['example/DocumentationTestSuite.class'])
}
*/

dependencies {
	testImplementation(project(':junit-jupiter-api'))
	testImplementation(project(path: ':junit-jupiter-params', configuration: 'shadow'))
	testImplementation(project(':junit-platform-runner'))
	testImplementation(project(':junit-platform-launcher'))

	// Include junit-platform-console so that the JUnit Gradle plugin
	// uses the local version of the ConsoleLauncher.
	testRuntimeOnly(project(path: ':junit-platform-console', configuration: 'shadow'))

	testRuntimeOnly(project(':junit-vintage-engine'))
	testRuntimeOnly(project(':junit-jupiter-engine'))
	testRuntimeOnly("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntimeOnly("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}

asciidoctorj {
	version = '1.5.5'
}

asciidoctor {
	// enable the Asciidoctor Diagram extension
	requires 'asciidoctor-diagram'

	separateOutputDirs false
	sources { include 'index.adoc' }

	backends 'html5', 'pdf' // , 'epub3'

	attributes	'jupiter-version': project.property('version'),
				'platform-version': project.property('platformVersion'),
				'vintage-version': project.property('vintageVersion'),
				'junit4-version': project.property('junit4Version'),
				'release-branch': project.property('releaseBranch'),
				'revnumber' : project.version,
				'mainDir': project.sourceSets.main.java.srcDirs[0],
				'testDir': project.sourceSets.test.java.srcDirs[0],
				'testResourcesDir': project.sourceSets.test.resources.srcDirs[0],
				'outdir': outputDir.absolutePath,
				'source-highlighter': 'coderay@', // TODO switch to 'rouge' once supported by the html5 backend and on MS Windows
				'tabsize': '4',
				'toc': 'left',
				'icons': 'font',
				'sectanchors': true,
				'idprefix': '',
				'idseparator': '-'
}
